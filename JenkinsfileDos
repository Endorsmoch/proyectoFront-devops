pipeline {
    agent any

    parameters {
        string(name: 'BUILD_NUMBER', defaultValue: '', description: 'Número de versión')
        string(name: 'DIST_PATH', defaultValue: '', description: 'Ruta del directorio dist')
    }

    stages {
        stage('Conexión SSH y transferencia de archivos') {
            steps {
                script {
                    // Dirección IP de la máquina virtual
                    def vmIP = '192.168.0.26'
                    // Nombre de usuario para la conexión SSH
                    def sshUser = 'ubuntu'
                    // Contraseña para la conexión SSH
                    def sshPassword = 'ubuntu'

                    // Ruta completa al archivo pscp.exe con barra invertida duplicada
                    def pscpPath = 'C:/pscp.exe'

                    bat('echo %cd%')
                    bat('dir')

                    // Obtener la lista de archivos en el directorio de origen
                    def files = sh(returnStdout: true, script: "dir /B ${env.DIST_PATH}").trim().split('\n')

                    // Iterar sobre los archivos y transferirlos individualmente
                    files.each { file ->
                        // Comando para establecer la conexión SSH y transferir el archivo
                        def sshCommandFull = "${pscpPath} -pw ${sshPassword} ${env.DIST_PATH}\\${file} ${sshUser}@${vmIP}:../../var/www/html/devops_web/"

                        // Ejecutar el comando SSH
                        bat(sshCommandFull)
                    }
                }
            }
        }
    }

    post {
        success {
            echo '¡El segundo pipeline se ha completado exitosamente!'
        }
        failure {
            echo 'El segundo pipeline ha fallado!'
        }
    }
}
